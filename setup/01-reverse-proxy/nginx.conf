user nginx;

pid /run/nginx.pid;

worker_processes auto;

events {
    # http://nginx.org/en/docs/events.html
    use                 epoll;
    worker_connections  2048;
    multi_accept        on;
}

# feel free to choose any facility you like in range 0..7
error_log syslog:server=unix:/dev/log,facility=local6,tag=nginx,severity=error;

http {

    ########################
    # Server block example #
    ########################
    # server {
    #     listen      80;
    #     server_name math.marco.enta; # Subdomain
    #
    #     location / {
    #         proxy_pass http://math:5000; # Name of the service with internal port
    #         proxy_set_header Host $host;
    #     }
    # }

    server {
        listen      80;
        server_name marco-k8s.cloudns.be secret.marco-k8s.cloudns.be wiki.marco-k8s.cloudns.be plik.marco-k8s.cloudns.be cert.marco-k8s.cloudns.be;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name marco-k8s.cloudns.be secret.marco-k8s.cloudns.be wiki.marco-k8s.cloudns.be plik.marco-k8s.cloudns.be cert.marco-k8s.cloudns.be;

        ssl_certificate /etc/nginx/cert.pem;
        ssl_certificate_key /etc/nginx/cert-key.pem;
        location / {
                proxy_ssl_verify off;
                proxy_ssl_server_name on;

                if ($host = marco-k8s.cloudns.be) {
                    proxy_pass http://localhost;
                }

                if ($host = secret.marco-k8s.cloudns.be) {
                    proxy_pass http://ots-service:7143;
                }

                if ($host = plik.marco-k8s.cloudns.be) {
                    proxy_pass http://plik-service:8080;
                }

                if ($host = wiki.marco-k8s.cloudns.be) {
                    proxy_pass http://wikijs-service:3000;
                }

                if ($host = cert.marco-k8s.cloudns.be) {
                    proxy_pass https://ejbca-service:8443;
                }


                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    #access_log syslog:server=unix:/dev/log,facility=local6,tag=nginx,severity=info;

    index index.html index.htm;
    charset utf-8;

    server_tokens off;
    autoindex off;
    client_max_body_size 2m;
    large_client_header_buffers 4 32k;

    include       mime.types;
    default_type  application/octet-stream;

    sendfile            on;
    sendfile_max_chunk  512k;
    
    tcp_nopush   on;
    tcp_nodelay  on;

    open_file_cache           max=1000 inactive=20s;
    open_file_cache_valid     30s;
    open_file_cache_min_uses  2;
    open_file_cache_errors    off;
    

    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_tickets off;
    ssl_session_cache         shared:SSL:50m;
    ssl_session_timeout       10m;
    ssl_stapling              on;
    ssl_stapling_verify       on;

    resolver                  8.8.8.8 8.8.4.4;  # replace with `127.0.0.1` if you have a local dns server
    ssl_prefer_server_ciphers on;
    #ssl_dhparam               ssl/dhparam.pem;  # openssl dhparam -out ssl/dhparam.pem 4096
    
    ##
    # GZIP
    ##
    gzip               on;
    gzip_disable       msie6;
    gzip_vary          on;
    gzip_proxied       any;
    # gzip_http_version  1.0;  # uncomment this to allow gzipping responses on http/1.0. proxy_pass uses http/1.0
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    # uncomment this if you want to provide nginx already gzipped variants of files, like `${file}.gz` 
    # gzip_static on;

    include conf.d/*.conf;
    include sites-enabled.d/*.conf;
}
